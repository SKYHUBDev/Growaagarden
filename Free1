--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--


--== [SKY HUB - Backpack Tracker] ==--

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local CoreGui = (gethui and gethui()) or game:GetService("CoreGui")
local player = Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")

local request = http_request or request or (syn and syn.request) or (fluxus and fluxus.request)
if not request then return warn("‚ùå Executor ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö http request") end

local function classifyItem(name)
	local lower = string.lower(name)
	if string.find(lower, "seed") then return "Seed" end
	if string.find(lower, "sprinkle") then return "Sprinkle" end
	if string.find(lower, "egg") then return "Egg" end
	return nil
end

local categoryNames = {
	Seed = "üå± Seed",
	Sprinkle = "‚ú® Sprinkle",
	Egg = "ü•ö Egg"
}

local knownItems = {}
local itemCounter = {}
local notifyNew = true
local notifyAll = true

--== UI ==--
if CoreGui:FindFirstChild("SKY_HUB_UI") then CoreGui.SKY_HUB_UI:Destroy() end
local gui = Instance.new("ScreenGui", CoreGui)
gui.Name = "SKY_HUB_UI"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 240, 0, 220)
frame.Position = UDim2.new(0.5, -120, 0.4, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 60)
frame.BackgroundTransparency = 0.05
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 30)
title.Text = "üåå SKY HUB - Status"
title.TextColor3 = Color3.fromRGB(0, 255, 200)
title.BackgroundColor3 = Color3.fromRGB(40, 40, 80)
title.Font = Enum.Font.GothamBold
title.TextSize = 16

local status = Instance.new("TextLabel", frame)
status.Size = UDim2.new(1, 0, 0, 20)
status.Position = UDim2.new(0, 0, 0, 30)
status.Text = "Status = Online üü¢ | " .. player.Name
status.TextColor3 = Color3.new(1, 1, 1)
status.BackgroundTransparency = 1
status.Font = Enum.Font.Gotham
status.TextSize = 14

local function makeButton(y, label, color, callback)
	local btn = Instance.new("TextButton", frame)
	btn.Size = UDim2.new(0.9, 0, 0, 28)
	btn.Position = UDim2.new(0.05, 0, 0, y)
	btn.BackgroundColor3 = color
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 14
	btn.Text = label
	btn.MouseButton1Click:Connect(callback)
	return btn
end

local btnNew, btnAll, btnSendNow

btnNew = makeButton(60, "üÜï ‡πÅ‡∏à‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà: ‚úÖ", Color3.fromRGB(100, 180, 100), function()
	notifyNew = not notifyNew
	btnNew.Text = "üÜï ‡πÅ‡∏à‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà: " .. (notifyNew and "‚úÖ" or "‚ùå")
end)

btnAll = makeButton(90, "üì¶ ‡πÅ‡∏à‡πâ‡∏á‡∏ó‡∏∏‡∏Å 20 ‡∏ô‡∏≤‡∏ó‡∏µ: ‚úÖ", Color3.fromRGB(50, 120, 200), function()
	notifyAll = not notifyAll
	btnAll.Text = "üì¶ ‡πÅ‡∏à‡πâ‡∏á‡∏ó‡∏∏‡∏Å 20 ‡∏ô‡∏≤‡∏ó‡∏µ: " .. (notifyAll and "‚úÖ" or "‚ùå")
end)

btnSendNow = makeButton(120, "üöÄ ‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ", Color3.fromRGB(180, 140, 50), function()
	sendAllWebhook("üì¶ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏™‡πà‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ)")
end)

makeButton(170, "‚ùå ‡∏õ‡∏¥‡∏î UI", Color3.fromRGB(160, 60, 60), function()
	gui:Destroy()
end)

--== Webhook Functions ==--
local function sendWebhook(fields, title)
	local embedFields = {}
	for cat, items in pairs(fields) do
		if #items > 0 then
			table.insert(embedFields, {
				name = categoryNames[cat],
				value = table.concat(items, "\n"),
				inline = false
			})
		end
	end
	if #embedFields == 0 then return end

	local data = {
		username = "SKY HUB",
		embeds = {{
			title = title,
			color = 3066993,
			fields = embedFields,
			footer = { text = "üë§ Roblox: " .. player.Name },
			timestamp = DateTime.now():ToIsoDate()
		}}
	}
	request({
		Url = webhookUrl,
		Method = "POST",
		Headers = { ["Content-Type"] = "application/json" },
		Body = HttpService:JSONEncode(data)
	})
end

function sendAllWebhook(customTitle)
	local fields = { Seed = {}, Sprinkle = {}, Egg = {} }
	for name, count in pairs(itemCounter) do
		local cat = classifyItem(name)
		if cat then
			table.insert(fields[cat], name .. " x" .. count)
		end
	end
	sendWebhook(fields, customTitle or "üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô Backpack")
end

local function sendNewItemWebhook(name)
	local cat = classifyItem(name)
	if not cat then return end
	local data = {
		username = "SKY HUB",
		embeds = {{
			title = "üÜï ‡∏û‡∏ö‡∏Ç‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô Backpack!",
			color = 16753920,
			fields = {{
				name = categoryNames[cat],
				value = "**" .. name .. "** x1",
				inline = false
			}},
			footer = { text = "üë§ Roblox: " .. player.Name },
			timestamp = DateTime.now():ToIsoDate()
		}}
	}
	request({
		Url = webhookUrl,
		Method = "POST",
		Headers = { ["Content-Type"] = "application/json" },
		Body = HttpService:JSONEncode(data)
	})
end

--== Init ==--
for _, item in ipairs(backpack:GetChildren()) do
	local cat = classifyItem(item.Name)
	if cat then
		knownItems[item.Name] = true
		itemCounter[item.Name] = (itemCounter[item.Name] or 0) + 1
	end
end

backpack.ChildAdded:Connect(function(item)
	local name = item.Name
	local cat = classifyItem(name)
	if not cat then return end

	itemCounter[name] = (itemCounter[name] or 0) + 1

	if notifyNew and not knownItems[name] then
		knownItems[name] = true
		sendNewItemWebhook(name)
	end
end)

task.spawn(function()
	while true do
		if notifyAll then
			sendAllWebhook("üì¶ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å 20 ‡∏ô‡∏≤‡∏ó‡∏µ")
		end
		task.wait(1200) -- 20 ‡∏ô‡∏≤‡∏ó‡∏µ
	end
end)--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--


--== [SKY HUB - Backpack Tracker] ==--

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local CoreGui = (gethui and gethui()) or game:GetService("CoreGui")
local player = Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")

local request = http_request or request or (syn and syn.request) or (fluxus and fluxus.request)
if not request then return warn("‚ùå Executor ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö http request") end

local function classifyItem(name)
	local lower = string.lower(name)
	if string.find(lower, "seed") then return "Seed" end
	if string.find(lower, "sprinkle") then return "Sprinkle" end
	if string.find(lower, "egg") then return "Egg" end
	return nil
end

local categoryNames = {
	Seed = "üå± Seed",
	Sprinkle = "‚ú® Sprinkle",
	Egg = "ü•ö Egg"
}

local knownItems = {}
local itemCounter = {}
local notifyNew = true
local notifyAll = true

--== UI ==--
if CoreGui:FindFirstChild("SKY_HUB_UI") then CoreGui.SKY_HUB_UI:Destroy() end
local gui = Instance.new("ScreenGui", CoreGui)
gui.Name = "SKY_HUB_UI"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 240, 0, 220)
frame.Position = UDim2.new(0.5, -120, 0.4, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 60)
frame.BackgroundTransparency = 0.05
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 30)
title.Text = "üåå SKY HUB - Status"
title.TextColor3 = Color3.fromRGB(0, 255, 200)
title.BackgroundColor3 = Color3.fromRGB(40, 40, 80)
title.Font = Enum.Font.GothamBold
title.TextSize = 16

local status = Instance.new("TextLabel", frame)
status.Size = UDim2.new(1, 0, 0, 20)
status.Position = UDim2.new(0, 0, 0, 30)
status.Text = "Status = Online üü¢ | " .. player.Name
status.TextColor3 = Color3.new(1, 1, 1)
status.BackgroundTransparency = 1
status.Font = Enum.Font.Gotham
status.TextSize = 14

local function makeButton(y, label, color, callback)
	local btn = Instance.new("TextButton", frame)
	btn.Size = UDim2.new(0.9, 0, 0, 28)
	btn.Position = UDim2.new(0.05, 0, 0, y)
	btn.BackgroundColor3 = color
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 14
	btn.Text = label
	btn.MouseButton1Click:Connect(callback)
	return btn
end

local btnNew, btnAll, btnSendNow

btnNew = makeButton(60, "üÜï ‡πÅ‡∏à‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà: ‚úÖ", Color3.fromRGB(100, 180, 100), function()
	notifyNew = not notifyNew
	btnNew.Text = "üÜï ‡πÅ‡∏à‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà: " .. (notifyNew and "‚úÖ" or "‚ùå")
end)

btnAll = makeButton(90, "üì¶ ‡πÅ‡∏à‡πâ‡∏á‡∏ó‡∏∏‡∏Å 20 ‡∏ô‡∏≤‡∏ó‡∏µ: ‚úÖ", Color3.fromRGB(50, 120, 200), function()
	notifyAll = not notifyAll
	btnAll.Text = "üì¶ ‡πÅ‡∏à‡πâ‡∏á‡∏ó‡∏∏‡∏Å 20 ‡∏ô‡∏≤‡∏ó‡∏µ: " .. (notifyAll and "‚úÖ" or "‚ùå")
end)

btnSendNow = makeButton(120, "üöÄ ‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ", Color3.fromRGB(180, 140, 50), function()
	sendAllWebhook("üì¶ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏™‡πà‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ)")
end)

makeButton(170, "‚ùå ‡∏õ‡∏¥‡∏î UI", Color3.fromRGB(160, 60, 60), function()
	gui:Destroy()
end)

--== Webhook Functions ==--
local function sendWebhook(fields, title)
	local embedFields = {}
	for cat, items in pairs(fields) do
		if #items > 0 then
			table.insert(embedFields, {
				name = categoryNames[cat],
				value = table.concat(items, "\n"),
				inline = false
			})
		end
	end
	if #embedFields == 0 then return end

	local data = {
		username = "SKY HUB",
		embeds = {{
			title = title,
			color = 3066993,
			fields = embedFields,
			footer = { text = "üë§ Roblox: " .. player.Name },
			timestamp = DateTime.now():ToIsoDate()
		}}
	}
	request({
		Url = webhookUrl,
		Method = "POST",
		Headers = { ["Content-Type"] = "application/json" },
		Body = HttpService:JSONEncode(data)
	})
end

function sendAllWebhook(customTitle)
	local fields = { Seed = {}, Sprinkle = {}, Egg = {} }
	for name, count in pairs(itemCounter) do
		local cat = classifyItem(name)
		if cat then
			table.insert(fields[cat], name .. " x" .. count)
		end
	end
	sendWebhook(fields, customTitle or "üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô Backpack")
end

local function sendNewItemWebhook(name)
	local cat = classifyItem(name)
	if not cat then return end
	local data = {
		username = "SKY HUB",
		embeds = {{
			title = "üÜï ‡∏û‡∏ö‡∏Ç‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô Backpack!",
			color = 16753920,
			fields = {{
				name = categoryNames[cat],
				value = "**" .. name .. "** x1",
				inline = false
			}},
			footer = { text = "üë§ Roblox: " .. player.Name },
			timestamp = DateTime.now():ToIsoDate()
		}}
	}
	request({
		Url = webhookUrl,
		Method = "POST",
		Headers = { ["Content-Type"] = "application/json" },
		Body = HttpService:JSONEncode(data)
	})
end

--== Init ==--
for _, item in ipairs(backpack:GetChildren()) do
	local cat = classifyItem(item.Name)
	if cat then
		knownItems[item.Name] = true
		itemCounter[item.Name] = (itemCounter[item.Name] or 0) + 1
	end
end

backpack.ChildAdded:Connect(function(item)
	local name = item.Name
	local cat = classifyItem(name)
	if not cat then return end

	itemCounter[name] = (itemCounter[name] or 0) + 1

	if notifyNew and not knownItems[name] then
		knownItems[name] = true
		sendNewItemWebhook(name)
	end
end)

task.spawn(function()
	while true do
		if notifyAll then
			sendAllWebhook("üì¶ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å 20 ‡∏ô‡∏≤‡∏ó‡∏µ")
		end
		task.wait(1200) -- 20 ‡∏ô‡∏≤‡∏ó‡∏µ
	end
end)
